---
- name: Deploy Kubernetes resources
  hosts: build
  vars:
    k8s_dir: "../../../infra/k8s"
    kubectl_timeout: 120
    kubeconfig: "home/melek/.kube/config"

  tasks:
    - name: Ensure kubectl is available
      become: false
      command: which kubectl
      register: kubectl_check
      changed_when: false
      failed_when: false

    - name: Install kubectl if missing
      become: true
      apt:
        name: kubectl
        state: present
        update_cache: yes
      when: kubectl_check.rc != 0

    - name: Verify kubeconfig exists
      become: false
      stat:
        path: "{{ kubeconfig }}"
      register: kubeconfig_stat

    - name: Fail if kubeconfig missing
      become: false
      fail:
        msg: "Kubeconfig not found at {{ kubeconfig }}. Run 'minikube start' first."
      when: not kubeconfig_stat.stat.exists

    - name: Verify cluster access
      become: false
      command: "kubectl cluster-info --kubeconfig {{ kubeconfig }}"
      register: cluster_check
      changed_when: false
      failed_when: "cluster_check.rc != 0"

    - name: Deploy base namespaces
      become: false
      community.kubernetes.k8s:
        state: present
        src: "{{ k8s_dir }}/namespaces.yaml"
        kubeconfig: "{{ kubeconfig }}"
      register: ns_deploy
      changed_when: ns_deploy.resources | selectattr('changed') | list | count > 0

    - name: Deploy infrastructure components
      block:
        - name: Apply infrastructure manifests
          community.kubernetes.k8s:
            state: present
            src: "{{ k8s_dir }}/store-infra/{{ item }}"
            namespace: store-infra
            kubeconfig: "{{ kubeconfig }}"
          loop: "{{ lookup('fileglob', k8s_dir + '/store-infra/*.yaml') | map('basename') }}"
      tags: [infra]

    - name: Deploy monitoring stack
      block:
        - name: Apply monitoring manifests
          community.kubernetes.k8s:
            state: present
            src: "{{ k8s_dir }}/store-monitoring/{{ item }}"
            namespace: store-monitoring
            kubeconfig: "{{ kubeconfig }}"
          loop: "{{ lookup('fileglob', k8s_dir + '/store-monitoring/*.yaml') | map('basename') }}"
      tags: [monitoring]

    - name: Deploy OpenTelemetry components
      block:
        - name: Apply OTel manifests
          community.kubernetes.k8s:
            state: present
            src: "{{ k8s_dir }}/store-otel/{{ item }}"
            namespace: otel-system
            kubeconfig: "{{ kubeconfig }}"
          loop:
            - rbac.yaml
            - config.yaml
            - network.yaml
            - service.yaml
            - deployment.yaml
            - instrumentation.yaml
      tags: [otel]

    - name: Deploy application services
      block:
        - name: Apply application manifests
          community.kubernetes.k8s:
            state: present
            src: "{{ k8s_dir }}/store-app/{{ item }}"
            namespace: store-app
            timeout: "{{ kubectl_timeout }}"
            kubeconfig: "{{ kubeconfig }}"
          loop: "{{ lookup('fileglob', k8s_dir + '/store-app/*.yaml') | map('basename') }}"
      tags: [app]

    - name: Verify deployments
      community.kubernetes.k8s_info:
        kind: Deployment
        namespace: "{{ item.namespace }}"
        kubeconfig: "{{ kubeconfig }}"
      loop:
        - { namespace: 'store-infra' }
        - { namespace: 'store-app' }
        - { namespace: 'store-monitoring' }
        - { namespace: 'otel-system' }
      register: deploy_status
      failed_when: "deploy_status.resources | length == 0"
