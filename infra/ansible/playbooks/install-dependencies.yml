---
- name: Install build dependencies
  hosts: build
  vars:
    go_version: "1.22"
    java_version: "17"
    node_version: "16"

  tasks:
    - name: Install basic build tools
      apt:
        name: [wget, git, make, gcc, unzip]
        state: present
        update_cache: yes

    - name: Check if Go {{ go_version }} is installed
      shell: go version
      register: go_check
      ignore_errors: yes
      changed_when: false

    - name: Install Go {{ go_version }}
      block:
        - name: Download Go
          get_url:
            url: "https://go.dev/dl/go{{ go_version }}.linux-amd64.tar.gz"
            dest: /tmp/go.tar.gz

        - name: Install Go
          unarchive:
            src: /tmp/go.tar.gz
            dest: /usr/local
            remote_src: yes
            owner: root
            group: root

        - name: Add Go to PATH
          lineinfile:
            path: /etc/profile.d/go.sh
            line: 'export PATH=$PATH:/usr/local/go/bin'
            create: yes
      when: 
        - go_check is failed or 
        - "'go{{ go_version }}' not in go_check.stdout"

    - name: Check Java {{ java_version }} installation
      package_facts:
        manager: auto
      register: java_packages

    - name: Install OpenJDK {{ java_version }}
      apt:
        name: openjdk-{{ java_version }}-jdk
        state: present
      when: "'openjdk-{{ java_version }}-jdk' not in java_packages.packages"

    - name: Check Node.js installation
      shell: node --version
      register: node_check
      ignore_errors: yes
      changed_when: false

    - name: Install Node.js {{ node_version }}.x
      block:
        - name: Add NodeSource repository
          shell: |
            curl -fsSL https://deb.nodesource.com/setup_{{ node_version }}.x | bash -
          args:
            executable: /bin/bash

        - name: Install Node.js and npm
          apt:
            name: [nodejs]
            state: present
            update_cache: yes
      when: 
        - node_check is failed or
        - not node_check.stdout.startswith('v{{ node_version }}.')

    - name: Check Angular CLI installation
      shell: npm list -g @angular/cli
      register: angular_cli_check
      ignore_errors: yes
      changed_when: false

    - name: Install Angular CLI
      npm:
        name: @angular/cli
        global: yes
        state: present
      when: "'@angular/cli' not in angular_cli_check.stdout"
