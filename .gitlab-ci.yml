stages:
  - checkout
  - build
  - docker
  - security_scan
  - deploy

variables:
  DOCKER_TLS_CERTDIR: ""
  DOCKER_DRIVER: overlay2

# 1
checkout:
  stage: checkout
  script:
    - echo "Code checked out to $CI_PROJECT_DIR"
  rules:
    - when: always

# 2️⃣ BUILD jobs:
build_go:
  stage: build
  image: golang:1.22-alpine
  tags: [go]
  before_script:
    - apk add --no-cache bash
  script:
    - cd src/inventory-management && go build -v
    - cd ../product-catalog    && go build -v
  artifacts:
    paths:
      - src/inventory-management/inventory-management
      - src/product-catalog/product-catalog

build_maven:
  stage: build
  image: maven:3.9.5-openjdk-21
  tags: [maven]
  script:
    - cd src/shopping-cart   && mvn clean package -B
    - cd ../order-processing && mvn clean package -B
  artifacts:
    paths:
      - src/shopping-cart/target/*.jar
      - src/order-processing/target/*.jar

build_angular:
  stage: build
  image: node:20-alpine
  tags: [nodejs]
  before_script:
    - apk add --no-cache bash
  script:
    - cd src/store-ui
    - npm ci
    - npm run build
  artifacts:
    paths:
      - src/store-ui/dist/

# 3️⃣ Docker: build & push images via DinD
docker:
  stage: docker
  image: docker:24.0.5
  services:
    - name: docker:24.0.5-dind
      alias: docker
  before_script:
    - docker login -u "$DOCKERHUB_USERNAME" -p "$DOCKERHUB_PASSWORD"
  script:
    - |
      for svc in inventory product-catalog shopping-cart order-processing cart products store; do
        docker build --pull -t "$DOCKERHUB_USERNAME/$svc:latest" src/${svc//store/store-ui} &&
        docker push "$DOCKERHUB_USERNAME/$svc:latest"
      done

# 4️⃣ Security scans with Trivy
security_scan:
  stage: security_scan
  image:
    name: aquasec/trivy:latest
    entrypoint: [""]
  script:
    - trivy fs --no-progress --format table --output docs/trivy/trivyfs.txt .
    - |
      for img in products orders cart inventory; do
        trivy image --no-progress --format table \
          --output docs/trivy/images/${img}.txt \
          "$DOCKERHUB_USERNAME/$img:latest"
      done
  artifacts:
    paths:
      - docs/trivy/
    expire_in: 1 week

# 5️⃣ Deploy to Kubernetes
deploy:
  stage: deploy
  image: bitnami/kubectl:latest
  before_script:
    - mkdir -p ~/.kube
    - echo "$KUBECONFIG_CI" > ~/.kube/config
  script:
    - kubectl apply -f infra/k8s/namespaces.yaml
    - kubectl apply -n store-infra      -f infra/k8s/store-infra/
    - kubectl apply -n store-monitoring -f infra/k8s/store-monitoring/
    - kubectl apply -n otel-system      -f infra/k8s/store-otel/
    - kubectl apply -n store-app        -f infra/k8s/store-app/
    - kubectl rollout status deployment --all --timeout=120s -n store-infra
    - kubectl rollout status deployment --all --timeout=120s -n store-monitoring
    - kubectl rollout status deployment --all --timeout=120s -n otel-system
    - kubectl rollout status deployment --all --timeout=120s -n store-app
  only:
    - master
